# -*- coding: utf-8 -*-
"""Copy of Colourtrack.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_6bM6MzAIcG6lLS4vG9zsbukgZ6td2-s
"""
from flask import Flask, request, jsonify
from colorthief import ColorThief
import colorsys

app = Flask(__name__)

# Function to extract dominant colors
def extract_colors(image_path, num_colors=5):
    color_thief = ColorThief(image_path)
    palette = color_thief.get_palette(color_count=num_colors)
    return palette

# Function to generate background suggestions
def suggest_background_colors(main_color):
    r, g, b = main_color
    h, s, v = colorsys.rgb_to_hsv(r/255, g/255, b/255)

    complementary = colorsys.hsv_to_rgb((h + 0.5) % 1, s, v)
    complementary = tuple(int(c * 255) for c in complementary)

    analogous1 = colorsys.hsv_to_rgb((h + 0.1) % 1, s, v)
    analogous2 = colorsys.hsv_to_rgb((h - 0.1) % 1, s, v)
    analogous1 = tuple(int(c * 255) for c in analogous1)
    analogous2 = tuple(int(c * 255) for c in analogous2)

    return {"complementary": complementary, "analogous": [analogous1, analogous2]}

# API endpoint
@app.route('/suggest-colors', methods=['POST'])
def suggest_colors():
    if 'image' not in request.files:
        return jsonify({"error": "No image uploaded"}), 400

    image = request.files['image']
    image_path = "temp.jpg"
    image.save(image_path)

    colors = extract_colors(image_path)
    background_suggestions = suggest_background_colors(colors[0])

    return jsonify({
        "dominant_colors": colors,
        "background_suggestions": background_suggestions
    })

if __name__ == '__main__':
    app.run(debug=True, port=5000)
